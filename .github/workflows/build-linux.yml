name: Linux build

on: [push, pull_request]

jobs:
  precheks:
    name:    Linux -> Pre-checks
    runs-on: ubuntu-24.04

    steps:
    - name: Clone DiligentCore
      uses: actions/checkout@v4
      with:
        repository: DiligentGraphics/DiligentCore
        path:       DiligentCore

    - name: Clone DiligentTools
      uses: actions/checkout@v4
      with:
        path: DiligentTools

    - name: Format validation
      shell: bash
      working-directory: ${{github.workspace}}/DiligentTools/BuildTools/FormatValidation
      run: ./validate_format_linux.sh

    - name: Codespell
      uses: codespell-project/actions-codespell@master
      with:
        check_filenames: true
        ignore_words_file: ./DiligentTools/.github/.codespellignore
        skip: ./DiligentTools/.git,./DiligentTools/ThirdParty,./DiligentTools/NativeApp/Android/ndk_helper,./DiligentTools/NativeApp/Android/arcore_sdk
        path: ./DiligentTools


  build:
    needs:   precheks
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        name:       ["GCC", "Clang"]
        build_type: ["Debug", "Release"]
        cmake_args: ["-DDILIGENT_BUILD_TOOLS_TESTS=ON -DDILIGENT_BUILD_TOOLS_INCLUDE_TEST=ON -DZLIB_BUILD_MINIZIP=ON"]

        include:
          - name:            "GCC"
            cmake_generator: "Unix Makefiles"
            cc:              "gcc-14"
            cxx:             "g++-14"

          - name:            "Clang"
            cmake_generator: "Ninja"
            cc:              "clang-18"
            cxx:             "clang++-18"

    name: Linux -> ${{ matrix.name }}-x64, ${{ matrix.build_type }}

    steps:
    - name: Checkout
      uses: DiligentGraphics/github-action/checkout@v7

    - name: Set up build environment
      if:   success()
      uses: DiligentGraphics/github-action/setup-build-env@v7
      with:
        platform:        Linux
        cmake-generator: ${{ matrix.cmake_generator }}

    - name: Configure CMake
      if:   success()
      uses: DiligentGraphics/github-action/configure-cmake@v7
      with:
        cc:         ${{ matrix.cc }}
        cxx:        ${{ matrix.cxx }}
        generator:  ${{ matrix.cmake_generator }}
        build-type: ${{ matrix.build_type }}
        cmake-args: ${{ matrix.cmake_args }}

    - name: Build
      id:   build
      if:   success()
      uses: DiligentGraphics/github-action/build@v7
      with:
        target: install

    - name: DiligentToolsTest
      if:   success()
      uses: DiligentGraphics/github-action/run-tools-tests@v7

    - name: DiligentToolsGPUTest VK
      # NB: it is essential to include failure() to override the default status check of success()
      #     that is automatically applied to if conditions that don't contain a status check function.
      if:   ${{ success() || failure() && steps.build.outcome == 'success' }}
      uses: DiligentGraphics/github-action/run-tools-gpu-tests@v7
      with:
        mode: vk_sw

    - name: DiligentToolsGPUTest GL
      if:   ${{ success() || failure() && steps.build.outcome == 'success' }}
      uses: DiligentGraphics/github-action/run-tools-gpu-tests@v7
      with:
        mode: gl

    - name: HLSL2GLSLConverterTest
      if:   ${{ success() || failure() && steps.build.outcome == 'success' }}
      uses: DiligentGraphics/github-action/run-hlsl2glsl-converter-test@v7

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      if:   ${{ success() && matrix.build_type != 'Debug' }}
      with:
        name: DiligentTools-Linux-${{ matrix.name }}-x64-${{ matrix.build_type }}
        path: ${{env.DILIGENT_INSTALL_DIR}}/bin/DiligentTools
        retention-days: 90
